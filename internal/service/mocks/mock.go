// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "gitlab.com/a5805/ondeu/ondeu-back/pkg/models"
)

// MockProxifier is a mock of Proxifier interface.
type MockProxifier struct {
	ctrl     *gomock.Controller
	recorder *MockProxifierMockRecorder
}

// MockProxifierMockRecorder is the mock recorder for MockProxifier.
type MockProxifierMockRecorder struct {
	mock *MockProxifier
}

// NewMockProxifier creates a new mock instance.
func NewMockProxifier(ctrl *gomock.Controller) *MockProxifier {
	mock := &MockProxifier{ctrl: ctrl}
	mock.recorder = &MockProxifierMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProxifier) EXPECT() *MockProxifierMockRecorder {
	return m.recorder
}

// Proxify mocks base method.
func (m *MockProxifier) Proxify(arg0 context.Context, arg1 models.Request) (models.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Proxify", arg0, arg1)
	ret0, _ := ret[0].(models.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Proxify indicates an expected call of Proxify.
func (mr *MockProxifierMockRecorder) Proxify(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Proxify", reflect.TypeOf((*MockProxifier)(nil).Proxify), arg0, arg1)
}
